#!/bin/sh
#
# Build a statusline from stdin; output should be piped to lemonbar

# If the string is longer than the given length, shorten it and end it with ...
dottruncate() {
  maxlen=$1; shift

  string=$@
  len=${#string}

  if [ $len -ge $maxlen ]; then
    echo -n $(echo $string | head -c $(expr $maxlen - 3))
    echo -n '...'
  else
    echo -n $string
  fi
}

sep() {
  echo -n " %{F$SEPARATOR_COLOR}|%{F-} "
}

set -euo pipefail

. ./panelopts

batpercent=?
batstatus=?
clock=?
curwindow=?
desktopinfo=?
loadavg=?

while read -r line; do
  case $line in
    BS*)
      case "${line#??}" in
        'Discharging') batstatus='-' ;;
        'Charging') batstatus='+' ;;
        'Unknown') batstatus='?' ;;
        'Full') batstatus='' ;;
      esac
      ;;
    BP*)
      batpercent=${line#??}
      ;;
    C*)
      clock=${line#?}
      ;;
    L*)
      loadavg=${line#?}
      ;;
    T*)
      curwindow=${line#?}
      ;;
    WM*)
      IFS=:
      desktopinfo=""
      for desktop in {$line#??}; do
        case $desktop in
          f*|F*|o*|O*)
            desktopinfo+="%{A:bspc desktop -f ${desktop#?}:} "
            case $desktop in
              f*) # Unoccupied desktop, unfocused
                desktopinfo+="%{F$DESKTOP_FREE_COLOR}${desktop#?}%{F-}" ;;
              F*) # Unoccupied desktop, focused
                desktopinfo+="[%{F$DESKTOP_FREE_COLOR}${desktop#?}%{F-}]" ;;
              o*) # Occupied desktop, unfocused
                desktopinfo+="${desktop#?}" ;;
              O*) # Occupied desktop, focused
                desktopinfo+="[${desktop#?}]" ;;
            esac
            desktopinfo+="%{A}" ;;
        esac
      done
      unset IFS
      ;;
  esac

  echo -n "%{l}$desktopinfo"
  echo -n "%{c}$(dottruncate 120 $curwindow)"
  echo -n "%{r}Load: $loadavg" && sep
  echo -n "Batt: $batstatus$batpercent%" && sep
  echo -n "$clock"
  echo
done
